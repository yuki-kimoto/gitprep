<%
  # API
  my $api = gitprep_api;
  
  # Parameters
  my $user_id = param('user');
  my $project_id = param('project');
  my $diff = param('diff');
  my ($from_rev, $rev) = $diff =~ /(.+)\.\.(.+)/;
  $rev = $diff unless defined $rev;

  my $is_wiki = (stash('tab') // '') eq 'wiki';
  my $user_project_path = "/$user_id/$project_id";
  if ($is_wiki) {
    $user_project_path .= '/wiki';
  }
  my $rep_info = $is_wiki ? app->wiki_rep_info($user_id, $project_id) : app->rep_info($user_id, $project_id);

  # Git
  my $git = app->git;
  
  # Commit
  my $commit = $git->get_commit($rep_info, $rev);
  
  unless ($commit) {
    $self->reply->not_found;
    return;
  }
  $from_rev = $commit->{parent} unless defined $from_rev;
  my $commit_short_id = substr($commit->{id}, 0, 7, );
  my $commit_author_email = $commit->{author_email};
  my $commit_author_id = app->dbi->model('user')->select(
    'id',
    where => {email => $commit_author_email}
  )->value;
  my $commit_comment = [@{$commit->{comment}}];
  shift @$commit_comment;
  $commit_comment = join "\n", (@$commit_comment);
  $commit_comment =~ s/^[ \t\r\t]*(.*?)[ \t\r\n]*$/$1/s;

  # Branches
  my $branches = $git->locate_commit('branch', $rep_info, $commit->{id});

  # Tags
  my $tags = $git->locate_commit('tag', $rep_info, $commit->{id});

  # commit_body args
  my %commit_body_args = (
    user => $user_id,
    project => $project_id,
    rev => $rev,
    from_rev => $from_rev
  );

  layout 'common', title => "$commit->{title_short} \x{b7} $commit_short_id";
%>

%= include '/include/header';

<div class="container">
  <ul class="commits-summary-header">
    <li style="font-size: 160%; line-height: 160%"><%= $commit->{title} %></li>
     <li class="last-child">
      % unless ($is_wiki) {
        <a class="btn" href="<%= url_for("$user_project_path/tree/$commit->{id}") %>" title="Browse the repository at the point in the history">
          %= $api->icon('file-code');
          Browse files
        </a>
      % }
    </li>
  </ul>
  <ul class="commits-author">
    <li>
      <span class="commits-summary-author">
        % if (defined $commit_author_id) {
          <a href="<%= url_for("/$commit_author_id") %>"><%= $commit_author_id %></a>
        % } else {
          <%= $commit->{author_name} %>
        % }
      </span>
      commited
      %= $api->age_element($commit->{committer_epoch});
    </li>
  </ul>
  <ul class="commits-summary">
    % if ($commit_comment) {
      <li><pre><%= $commit_comment %></pre></li>
    % }
    <li class="last-child">
      <div class="commits-summary-body">
        <div>
          % unless ($is_wiki) {
            % if (@$branches) {
              <div>
                %= $api->icon('git-branch');
                % for my $branch (@$branches) {
                  <a href="<%= url_for("$user_project_path/tree/$branch") %>"><%= $branch %></a>
                % }
              </div>
            % }
            % if (@$tags) {
              <div>
                %= $api->icon('tag');
                % for my $tag (@$tags) {
                  <span style="padding-left:5px">
                    <a href="<%= url_for("$user_project_path/tree/$tag") %>"><%= $tag %></a>
                  </span>
                % }
              </div>
            % }
          % }
        </div>
        <div class="last-child">
          % my $parents = $commit->{parents};
          
          <div class="commits-summary-parent">
            <span><%= $api->plural('parent', scalar @$parents, '0') %></span>
            % my $sep = '';
            % for my $parent (@$parents) {
              <%= $sep %><a href="<%= url_for("$user_project_path/commit/$parent") %>">
                <%= substr($parent, 0, 7) %>
              </a>
              % $sep = ' + ';
            % }
          </div>
          <div class="commits-summary-commit-id">
            commit <span><%= substr($commit->{id}, 0, 7) %></span>
          </div>
        </div>
      </div>
    </li>
  </ul>

  %= include '/include/commit_body', %commit_body_args;
</div>

%= include '/include/footer';
