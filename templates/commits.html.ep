<%
  # API
  my $api = gitprep_api;

  # Git
  my $git = $self->app->git;

  # Parameters
  my $user_id = param('user');
  my $project_id = param('project');
  my $rev_file = param('rev_file');

  my $is_wiki = (stash('tab') // '') eq 'wiki';
  
  my $user_project_path = "/$user_id/$project_id";
  if ($is_wiki) {
    $user_project_path .= '/wiki';
  }
  
  my $render_atom_feed = $rev_file =~ s/\.atom$// ? 1 : 0;
  
  my $rep_info = $is_wiki ? app->wiki_rep_info($user_id, $project_id) : app->rep_info($user_id, $project_id);
  
  my ($rev, $file) = $git->parse_rev_path($rep_info, $rev_file);
  my $page = param('page') || 1;
  
  # Latest commit
  my $latest_commit = $git->get_commit($rep_info, $rev);

  # Authors
  my %author_id_of = map { $_->{email} => $_->{id} }
    @{ app->dbi->model('user')->select( [ 'id', 'email' ] )->all };
    
  # Commits
  my $page_count = 30;
  my $commits = $git->get_commits(
    $rep_info,
    $latest_commit->{id},
    $page_count,
    $page_count * ($page - 1),
    $file
  );
  my $commits_count = @$commits;
  my $last_commit_date = @$commits? $commits->[0]->{committer_epoch}: 0;

  # Global variable
  stash(user => $user_id, project => $project_id, rev => $rev);

  # Render atom xml feed
  if ($render_atom_feed) {
    # Add updated date time
    for my $commit (@$commits) {
      my $committer_epoch = $commit->{committer_epoch};
      my $committer_tz = $commit->{committer_tz};

      my $time_zone_minutes = 0;
      if ($committer_tz =~ /^(\+|\-)([0-9]{2})([0-9]{2})$/) {
        my $time_zone_sign = $1;
        my $time_zone_hour = $2;
        my $time_zone_min = $3;
        $time_zone_minutes = $time_zone_sign . ($time_zone_hour * 60 + $time_zone_min);
      }

      # updated datetime
      $commit->{updated} = $api->strftime($committer_epoch, '%FT%T%Z',
        $time_zone_minutes);
    }
  }

  # Set stash
  stash(
    user => $user_id,
    project => $project_id,
    rev => $rev
  );
#%>
% if ($render_atom_feed) {
<%
    $self->res->headers->content_type('application/atom+xml;charset=UTF-8');
    # Create atom feed
    my $alternate_url = url_with;
    my $alternate_url_path_parts = $alternate_url->path->parts;
    $alternate_url_path_parts->[-1] =~ s/\.atom$//;
#%>
<?xml version="1.0" encoding="UTF-8" ?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xml:lang="en-US">
  <id>tag:gitprep,2008:/<%= $user_id %>/<%= $project_id %>/commits/<%= $rev_file %></id>
  <link type="text/html" rel="alternate" href="<%= $alternate_url->to_abs %>" />
  <link type="application/atom+xml" rel="self" href="<%= url_with->to_abs %>" />
  <title>Recent Commits to <%= "$project_id:$rev" %></title>
  <updated><%= $commits->[0]->{updated} %></updated>

    % for my $commit (@$commits) {
      <%
        my $author_id = app->dbi->model('user')->select('id', where => {email => $commit->{author_email}})->value;
      %>
  <entry>
    <id>tag:gitprep,2008:Grit::Commit/<%= $commit->{id} %></id>
    <link type="text/html" rel="alternate" href="<%= url_for("$user_project_path/commit/$commit->{id}")->to_abs %>" />
    <title>
        <%= $commit->{title} %>
    </title>
    <updated><%= $commit->{updated} %></updated>
    <author>
      % if ($author_id) {
        <name><%= $author_id %></name>
        <uri><%= url_for("/$author_id")->to_abs %></uri>
      % }
      % else {
        <name><%= $commit->{author_name} %></name>
      % }
    </author>
    <content type="html">
      <%= "<pre style='white-space:pre-wrap;width:81ex'>$commit->{title}</pre>" %>
    </content>
  </entry>
    % }
</feed>
% } else {
  % layout 'common', title => "Commit History \x{b7} $user_id/$project_id";
    
    %= include '/include/header';

    <div class="container">
      % unless ($is_wiki) {
        <div>
          %= include '/include/branch_select', display => 'commits';
        </div>
      % }
      
      <div class="commits">
        <div class="commits-container">
          <div class="commit-date">
            %= $api->icon('git-commit', style => 'margin-right: 8px');
            <span class="date-text">
              Commits not after <%= $api->strftime($last_commit_date, '%F') %>
            </span>
          </div>
          <ul class="commits-date-container">
            % for my $commit (@$commits) {
              <%
                my $author_id = app->dbi->model('user')->select('id', where => {email => $commit->{author_email}})->value;
                my $commit_comment = join "\n", @{$commit->{comment}};
                $commit_comment =~ s/^[\r\n]*(.*?)[\r\n]*$/$1/;
              %>
              <li ts="<%= $commit->{committer_epoch} %>">
                <div class="commit-left">
                  <div class="commit-left-title">
                    <a href="<%= url_for("$user_project_path/commit/$commit->{id}") %>"
                      % if ($commit_comment ne $commit->{title_short}) {
                        title="<%= $commit_comment %>"
                      % }
                      ><b><%= $commit->{title_short} %></b>
                    </a>
                  </div>
                  <div class="commit-left-author">
                    <span title="<%= $commit->{author_email} %>">

                      % if (defined $author_id) {
                        <a href="<%= url_for("/$author_id") %>"><%= $author_id %></a>
                      % } else {
                        <%= $commit->{author_name} %>
                      % }
                    </span>
                    % if ($commit->{author_email} ne $commit->{committer_email}) {
                      <%
                        my $committer_id = app->dbi->model('user')->select('id', where => {email => $commit->{committer_email}})->value;
                      %>
                      authored and
                      <span title="<%= $commit->{committer_email} %>">

                        % if (defined $committer_id) {
                          <a href="<%= url_for("/$committer_id") %>"><%= $committer_id %></a>
                        % } else {
                          <%= $commit->{committer_name} %>
                        % }
                      </span>
                    % }
                    committed
                    %= $api->age_element($commit->{committer_epoch}, class => 'muted');
                  </div>
                </div>
                <div class="commit-right">
                  <div class="commit-right-container">
                    <div class="commit-right-commit-id">
                      <a href="<%= url_for("$user_project_path/commit/$commit->{id}") %>">
                        <%= substr($commit->{id}, 0, 7) %>
                      </a>
                    </div>
                    <div class="commit-right-browse-repository">
                      <a title="Browse the repository at this point in the history" href="<%= url_for("$user_project_path/tree/$commit->{id}") %>">
                        %= $api->icon('code');
                      </a>
                    </div>
                  </div>
                </div>
              </li>
            % }
          </ul>
        </div>
      </div>
      %= javascript begin
        Gitprep.commitsByDay($('.commits-container'));
      % end

      %= include '/include/pagination', page => $page, rows_per_page => $page_count, query => {}, left => 'Newer', right => 'Older';
    </div>

    %= include '/include/footer';
% }
